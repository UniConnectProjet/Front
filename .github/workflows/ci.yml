name: React CI/CD

on:
  push:
    branches:
      - main
      - dev
    tags: ['v*.*.*']
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set API URL
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "REACT_APP_API_URL=https://preprod.uni-connect.cloud/api" >> $GITHUB_ENV
          else
            echo "REACT_APP_API_URL=https://uni-connect.cloud/api" >> $GITHUB_ENV
          fi
          
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: build/

      - name: Connexion DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set TAG & SERVICE (deploy)
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "TAG=preprod" >> $GITHUB_ENV
            echo "SERVICE=frontend-preprod" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
            echo "SERVICE=frontend" >> $GITHUB_ENV
          else
            echo "TAG=" >> $GITHUB_ENV
            echo "SERVICE=" >> $GITHUB_ENV
          fi


      - name: Build & Push Docker frontend image
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            # PREPROD
            docker build -t inesbrm1/uniconnect-frontend:preprod .
            docker push  inesbrm1/uniconnect-frontend:preprod
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            # PROD (release tag): on publie le tag versionn√© et latest
            VER="${GITHUB_REF#refs/tags/}"
            docker build \
              -t inesbrm1/uniconnect-frontend:${VER} \
              -t inesbrm1/uniconnect-frontend:latest .
            docker push inesbrm1/uniconnect-frontend:${VER}
            docker push inesbrm1/uniconnect-frontend:latest
          else
            echo "Skip image push for ref: ${GITHUB_REF}"
          fi

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          envs: TAG,SERVICE,DOCKER_USERNAME,DOCKER_PASSWORD
          script: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            cd /var/www
            docker compose pull $SERVICE
            docker compose up -d --no-deps --force-recreate $SERVICE