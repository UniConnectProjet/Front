name: React CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: build/

      - name: Connexion DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: DÃ©finir TAG et SERVICE en fonction de la branche
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "TAG=prod" >> $GITHUB_ENV
            echo "SERVICE=frontend" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "TAG=preprod" >> $GITHUB_ENV
            echo "SERVICE=frontend-preprod" >> $GITHUB_ENV
          fi

      - name: Build & Push Docker frontend image
        run: |
          docker build -t inesbrm1/uniconnect-frontend:${TAG} .
          docker push inesbrm1/uniconnect-frontend:${TAG}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /var/www
            docker pull inesbrm1/uniconnect-frontend:${TAG}
            docker compose up -d --no-deps --force-recreate ${SERVICE}
